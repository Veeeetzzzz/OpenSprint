version: '3.8'

services:
  # OpenSprint Application
  opensprint:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_PROVIDER=postgresql
      - DATABASE_URL=postgresql://opensprint:opensprint_password@postgres:5432/opensprint?schema=public
      - JWT_SECRET=${JWT_SECRET:-please-change-this-in-production}
      - AUTH_MODE=${AUTH_MODE:-simple}
      - FEATURE_AUDIT_LOG=${FEATURE_AUDIT_LOG:-true}
      - FEATURE_WEBHOOKS=${FEATURE_WEBHOOKS:-true}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - uploads:/app/uploads
    networks:
      - opensprint-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=opensprint
      - POSTGRES_USER=opensprint
      - POSTGRES_PASSWORD=opensprint_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U opensprint -d opensprint"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - opensprint-network

  # Redis (for caching and rate limiting)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - opensprint-network

  # Nginx (reverse proxy for enterprise)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - opensprint
    restart: unless-stopped
    networks:
      - opensprint-network

volumes:
  postgres_data:
  redis_data:
  uploads:

networks:
  opensprint-network:
    driver: bridge 